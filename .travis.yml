
#language: go
#go: 1.23.3
# rvm:
#  - 3.2.4
# services:
#   - mysql
#   - rabbitmq
#   - postgresql
#   - docker

script:
  # - sudo apt-get install lsb-release curl gpg
  # - curl -fsSL https://packages.redis.io/gpg | sudo gpg --dearmor -o /usr/share/keyrings/redis-archive-keyring.gpg
  # - sudo chmod 644 /usr/share/keyrings/redis-archive-keyring.gpg
  # - echo "deb [signed-by=/usr/share/keyrings/redis-archive-keyring.gpg] https://packages.redis.io/deb $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/redis.list
  # - sudo apt-get update
  # - sudo apt-get install redis
  - go version
  # - sudo apt update && sudo apt install redis redis-server -y
  # - redis-server --version
  # - export PATH="$HOME/.cargo/bin:$PATH"
  # - source ~/.bashrc
  # - rustc --version
  # - sudo apt-get install -y libgirepository1.0-dev libdbus-1-dev libsystemd-dev libcurl4-openssl-dev python3-testresources
  #- /usr/bin/python3 -m pip install --upgrade pip breezy setuptools wheel pycurl --no-binary :all:
  #- sleep 5000
  # - pip3 install --upgrade pip
  # - pip3 install pip-review
  # - pip-review --auto

  #- sudo add-apt-repository -y ppa:cloud-init-dev/daily
  # - gem list
  # - sudo cat /etc/cloud/cloud.cfg
  #- gem list
  # - gem update --default
  # - gem update
  # - sudo gem update
  # - sudo gem update --default
  # - gem list

  # - sudo DI_LOG=stderr /usr/lib/cloud-init/ds-identify --force
  # - sudo cloud-init clean --logs
  # - sudo cloud-init init --local
  # - sudo cloud-init init
  # - echo "debugging"
  # - sudo dmesg -T | grep -i -e warning -e error -e fatal -e exception
  # - systemctl --failed
  #- sudo systemctl status -l cloud-config.service cloud-final.service cloud-init-local.service cloud-init.service
  # - sudo systemctl list-jobs --after

# language: java
# jdk: semeru11
  # - sudo rm -rf /Library/Developer/CommandLineTools
  # - Install | sudo xcode-select --install
  # - curl --insecure -O https://libssh2.org/download/libssh2-1.11.1.tar.gz
  # - brew install libssh2

  #- rvm list known
  #- HOMEBREW_NO_AUTO_UPDATE=1 brew reinstall openssl libyaml readline
  #- export RUBY_CONFIGURE_OPTS="--with-openssl-dir=$(brew --prefix openssl) --with-readline-dir=$(brew --prefix readline)"
  # - rvm -v  
  # - rvm requirements
  # - rvm pkg install libyaml openssl
  # - rvm reinstall all --force
  #- rvm user gemsets


  # - rvm get stable
  # - rvm reload
  # - rvm install 3.2.4 --verify-downloads 1 --disable-install-doc -C --without-tcl,--without-tk,--without-gmp
  # - rvm use 3.2.5 --default


  #- rvm use 3.2 --install --binary --fuzzy --with-openssl-dir=$HOME/.rvm/usr
  # - export VERSION=3.2.5
  # - export ALIAS=3.2
  # - unset JRUBY_OPTS
  #- brew install gcc
  # - chmod +x ./scripts/script1.sh
  # - ./scripts/script1.sh
  # - gcc --version
  # - rvm remove 1.8.7
  # - rvm reload
  # - rvm reset
  # - rvm cleanup all
  # - rvm autolibs homebrew
  # - rvm use --install 2.7.5
  # - echo $PATH
  # - go version
  # - rvm get stable
  # - curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain stable
  # - source "$HOME/.cargo/env"
  # - rvm install ruby-3.2.5 --enable-yjit --verify-downloads 1 --disable-install-doc -C --without-tcl,--without-tk,--without-gmp
  # - cat /Users/travis/.rvm/log/*_ruby-3.2.5/configure.log
  # - rvm prepare ruby-3.2.5


  # - java --version
  # - sudo systemctl status mysql.service
  # - sudo systemctl status rabbitmq-server.service
  # - sudo systemctl status postgresql.service
  # - sudo rabbitmqctl status
  # - mysqld --version
  # - postgres --version
  # - mysqld --print-defaults
  # - psql -U postgres -c 'SHOW config_file'
  # - cosign version
  # - git -v
  # - git-lfs
  # - hg --version
  # - svn --version
  # - clang --version
  # - cmake --version
  # - gcc --version
  # - ccache -V
  # - shellcheck --version
  # - shfmt -version
  # - docker version
  # - docker run hello-world
  # - docker compose version
  # - docker buildx version
  # - mongod --version
  # - gradle -version
  # - groovy -version


jobs:
  include:
  # - os: freebsd

  # - dist: xenial
  #   arch: arm64
  # - dist: bionic
  #   arch: arm64
  # - dist: focal
  #   arch: arm64
  # - dist: jammy
  #   arch: arm64

  - dist: xenial
    arch: ppc64le
  - dist: xenial
    arch: ppc64le
    group: edge
  - dist: bionic
    group: edge
    arch: ppc64le
  - dist: bionic
    group: stable
    arch: ppc64le
  # - dist: focal
  #   arch: ppc64le
  # - dist: jammy
  #   arch: ppc64le

  - dist: xenial
    arch: s390x
  - dist: xenial
    arch: s390x
    group: edge
  - dist: bionic
    group: edge
    arch: s390x
  - dist: bionic
    group: stable
    arch: s390x
  - dist: focal
    arch: s390x
    group: edge
  # - dist: jammy
  #   arch: s390x

  # - dist: trusty
  # - dist: xenial
  # - dist: bionic
  - dist: focal
  # - os: osx
  #   osx_image: xcode11.3
  # - os: osx
  #   osx_image: xcode12.3
  # - os: osx
  #   osx_image: xcode12.4

